name: SonarQube Quality Gate Check

on:
  push:
    branches:
      - "*"

  pull_request:
    branches:
      - "*"
jobs:
  sonarqube_analysis:
    runs-on: windows-2019

    steps:
      - name: Add msbuild to PATH
        uses: Dana-Prajea/Setup-MSBuild@v1.1
        with:
          vs-prerelease: true
          vs-version: "[19]"
      - name: java install
        uses: actions/setup-java@v3
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "17"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET 6.x
        uses: actions/setup-dotnet@v3
        with:
          # Semantic version range syntax or exact version of a dotnet version
          dotnet-version: "6.0.x"

      - name: SonarQube Scan
          echo "starting analyzing..."
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:"${{secrets.SONAR_PROJECT_KEY}}" /d:sonar.host.url="${{secrets.SONAR_HOST_URL}}" /d:sonar.login="${{secrets.SONAR_PROJECT_TOKEN}}"
          MSBuild.exe /t:Rebuild /p:TargetFramework=net46
          dotnet sonarscanner end /d:sonar.login="${{secrets.SONAR_PROJECT_TOKEN}}"

      - name: Check SonarQube Quality Gate
        run: |
          echo "Checking Quality gate status..."

          $response = Invoke-WebRequest -Uri "${{secrets.SONAR_HOST_URL}}/api/qualitygates/project_status?projectKey=${{secrets.SONAR_PROJECT_KEY}}" -Headers @{ Authorization = "Basic ${{secrets.SONAR_PROJECT_TOKEN}}" }
          $status = ($response.Content | ConvertFrom-Json).projectStatus.status
          Write-Host "SonarQube Quality Gate status: $status"
          if ($status -ne "OK") {
            Write-Host "Quality Gate check failed!"
            exit 1
          } else {
            Write-Host "Quality Gate check passed!"
          }
